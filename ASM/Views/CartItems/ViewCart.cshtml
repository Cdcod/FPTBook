@model ASM.Models.Cart
@{
    ViewData["Title"] = "Index";
    Layout = null;
    var books = Model.Items.Count();
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.11.2/css/all.min.css" />
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js" />
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" />
<link rel="stylesheet" href="https://code.jquery.com/jquery-3.3.1.slim.min.js" />
<section class="pt-5 pb-5">
    <div class="container">
        <div class="row w-100">
            <div class="col-lg-12 col-md-12 col-12">
                <h3 class="display-5 mb-2 text-center">Shopping Cart</h3>
                <p class="mb-5 text-center">
                    <i class="text-info font-weight-bold">@books</i> items in your cart
                </p>
                @if (Model.Items.Count() == 0)
                {
                    <p class="text-center">There are no products in the cart!</p>
                    <p class="text-center">
                        <a asp-controller="Home" asp-action="Index">
                            <i class="fa fa-reply"></i>
                        </a>
                    </p>
                }
                else
                {
                    @using(Html.BeginForm("UpdateCart", "CartItems", FormMethod.Post))
					{
                        <table id="shoppingCart" class="table table-condensed table-responsive">
                            <thead>
                                <tr>
                                    <th style="width:60%">Product</th>
                                    <th style="width:12%">Price</th>
                                    <th style="width:20%">Quantity</th>
                                    <th style="width:10%">Subtotal</th>
                                    <th style="width:16%"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td data-th="Product">
                                            <div class="row">
                                                <div class="col-md-3 text-left">
                                                    <img src="@Url.Content("~/img/" + item.Image)" alt="" class="img-fluid d-none d-md-block rounded mb-2 shadow ">
                                                </div>
                                                <div class="col-md-9 text-left mt-sm-2">
                                                    <h4>@item.Title</h4>
                                                </div>
                                            </div>
                                        </td>
                                        <td data-th="Price">$@item.Price</td>
                                        <td class="qty">
                                            <input type="hidden" name="bookIds" value="@item.BookId" />
                                            <div class="qty__wrapper">
                                                <button type="button" class="btn minus">-</button>
                                                <input type="number" id="quantity-value" name="quantities" value="@item.Quantity"
                                                       min="1" max="@item.StockQuantity">
                                                <button type="button" class="btn plus">+</button>
                                            </div>
                                        </td>
                                        <td data-th="Subtotal" class="text-center">$@(item.Price * item.Quantity)</td>
                                        <td class="actions" data-th="">
                                            <div class="text-right">
                                                <a asp-controller="CartItems" asp-action="RemoveFromCart" asp-route-id="@item.BookId" class="btn btn-white border-secondary bg-white btn-md mb-2"><i class="fas fa-trash"></i></a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="float-right text-right">
                            <h4>Total:</h4>
                            <h1>$@Model.CalculateTotal()</h1>
                        </div>
                        <div class="row mt-4 d-flex align-items-center">
                            <div class="col-sm-6 order-md-2 text-right">
                                <button type="button" class="btn btn-primary mb-4 btn-lg pl-5 pr-5">Checkout</button>
                                <button type="submit" class="btn btn-primary mb-4 btn-lg pl-5 pr-5">Update</button>
                            </div>
                            <div class="col-sm-6 mb-3 mb-m-1 order-md-1 text-md-left">
                                <a asp-controller="Home" asp-action="Index">
                                    <i class="fas fa-arrow-left mr-2"></i>
                                </a>
                            </div>
                        </div>
					}
				}
            </div>
        </div>
    </div>
</section>
@section ViewCart {
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			// Get quantity input element
			var quantityInputs = document.querySelectorAll(".qty__wrapper input");

			// Attach input event listener to validate quantity input
			quantityInputs.forEach(function (quantityInput) {
				quantityInput.addEventListener("input", function () {
					validateQuantity(quantityInput);
				});
			});

			// Attach click event listeners to plus and minus buttons
			var minusBtns = document.querySelectorAll(".qty__wrapper .minus");
			var plusBtns = document.querySelectorAll(".qty__wrapper .plus");

			minusBtns.forEach(function (minusBtn) {
				minusBtn.addEventListener("click", function () {
					decreaseQuantity(minusBtn);
				});
			});

			plusBtns.forEach(function (plusBtn) {
				plusBtn.addEventListener("click", function () {
					increaseQuantity(plusBtn);
				});
			});

			// Function to validate quantity and keep it within the specified range
			function validateQuantity(input) {
				var minQuantity = parseInt(input.getAttribute("min"), 10);
				var maxQuantity = parseInt(input.getAttribute("max"), 10);
				var currentQuantity = parseInt(input.value, 10);

				// Handle the case when the input is empty or not a number
				if (isNaN(currentQuantity) || currentQuantity === "") {
					input.value = minQuantity;
					return;
				}

				// Ensure the quantity is not less than the min
				if (currentQuantity < minQuantity) {
					input.value = minQuantity;
				}

				// Ensure the quantity is not greater than the max
				if (currentQuantity > maxQuantity) {
					input.value = maxQuantity;
				}
			}

			// Function to decrease quantity
			function decreaseQuantity(minusBtn) {
				var quantityInput = minusBtn.parentElement.querySelector("input");
				var currentQuantity = parseInt(quantityInput.value, 10);
				if (currentQuantity > 1) {
					quantityInput.value = currentQuantity - 1;
				}
			}

			// Function to increase quantity
			function increaseQuantity(plusBtn) {
				var quantityInput = plusBtn.parentElement.querySelector("input");
				var currentQuantity = parseInt(quantityInput.value, 10);
				var maxQuantity = parseInt(quantityInput.getAttribute("max"), 10);

				if (currentQuantity < maxQuantity) {
					quantityInput.value = currentQuantity + 1;
				}
			}
		});
	</script>
}

